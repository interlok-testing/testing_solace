version: '3.7'
services:
  interlok:
    build:
      context: .
      dockerfile: dockerfile
    environment:
      JAVA_OPTS:
    depends_on:
      solace-setup:
        condition: service_completed_successfully
  solace:
    image: solace/solace-pubsub-standard:latest
    volumes:
      - "storage-group:/var/lib/solace"
    shm_size: 1g
    ulimits:
      core: -1
      nofile:
        soft: 2448
        hard: 1048576
    hostname: 'solace-1'
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 1
      #ports:
      #Port Mappings:  With the exception of SMF, ports are mapped straight
      #through from host to container.  This may result in port collisions on
      #commonly used ports that will cause failure of the container to start.
      #Web transport
      #- '8008:8008'
      #Web transport over TLS
      #- '1443:1443'
      #SEMP over TLS
      #- '1943:1943'
      #MQTT Default VPN
      #- '1883:1883'
      #AMQP Default VPN over TLS
      #- '5671:5671'
      #AMQP Default VPN
      #- '5672:5672'
      #MQTT Default VPN over WebSockets
      #- '8000:8000'
      #MQTT Default VPN over WebSockets / TLS
      #- '8443:8443'
      #MQTT Default VPN over TLS
      #- '8883:8883'
      #SEMP / PubSub+ Manager
      #- '8080:8080'
      #REST Default VPN
      #- '9000:9000'
      #REST Default VPN over TLS
      #- '9443:9443'
      #SMF
      #- '55555:55555'
      #SMF Compressed
      #- '55003:55003'
      #SMF over TLS
      #- '55443:55443'
      #SSH connection to CLI
      #- '2222:2222'
    healthcheck:
      test: curl -X GET --fail -u admin:admin solace-1:8080/SEMP/v2/config/msgVpns/default/queues
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    environment:
      - username_admin_globalaccesslevel=admin
      - username_admin_password=admin
      - system_scaling_maxconnectioncount=100
  solace-setup:
    build:
      context: .
      dockerfile: dockerfile-solacesetup
    volumes:
      - /scripts
    depends_on:
      solace:
        condition: service_healthy

volumes:
  storage-group: